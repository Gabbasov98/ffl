{"version":3,"sources":["a-global.js","b-map.js","c-sliders.js","i-file.js","n-modal.js","01_main.js"],"names":[],"mappingsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;ACAA;ACAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../components/main.min.js","sourcesContent":["let form = document.querySelector(\".req-form\")\r\nlet companyNameField = form.querySelector(\"input[name='companyName']\")\r\nlet phoneField = form.querySelector(\"input[name='phone']\")\r\nlet nameField = form.querySelector(\"input[name='name']\")\r\nlet emailField = form.querySelector(\"input[name='email']\")\r\n\r\nIMask(\r\n    phoneField,\r\n    {\r\n        mask: '+{7} 000 000-00-00',\r\n        customPlaceholder: '+7 000 000-00-00',\r\n        lazy: true\r\n    }\r\n)\r\n\r\nconst validateEmail = (field) => {\r\n    let email = field.value\r\n    const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i\r\n\r\n    return expression.test(String(email).toLowerCase())\r\n};\r\n\r\nform.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault()\r\n    let companyNameFieldIsCorrect = false\r\n    let nameFieldIsCorrect = false\r\n    let phoneFieldIsCorrect = false\r\n    let emailFieldIsCorrect = false\r\n\r\n    if(companyNameField.value !== \"\"){\r\n        companyNameField.classList.remove(\"_error\")\r\n        companyNameFieldIsCorrect = true\r\n    } else{\r\n        companyNameField.classList.add(\"_error\")\r\n        companyNameFieldIsCorrect = false\r\n    }\r\n\r\n    if(nameField.value !== \"\"){\r\n        nameField.classList.remove(\"_error\")\r\n        nameFieldIsCorrect = true\r\n    } else{\r\n        nameField.classList.add(\"_error\")\r\n        nameFieldIsCorrect = false\r\n    }\r\n\r\n    if(validateEmail(emailField)){\r\n        emailField.classList.remove(\"_error\")\r\n        emailFieldIsCorrect = true\r\n    } else{\r\n        emailField.classList.add(\"_error\")\r\n        emailFieldIsCorrect = false\r\n    }\r\n\r\n    validatePhoneField(phoneField)\r\n\r\n\r\n    function validatePhoneField(field) {\r\n        let value = field.value\r\n        let lengthOfPhone = value.replace(/[^+\\d]/g, '').length\r\n        if(lengthOfPhone <= 2){\r\n            field.classList.add(\"_error\")\r\n            return false\r\n        } else{\r\n            field.classList.remove(\"_error\")\r\n        }\r\n\r\n        if (value.length<12){\r\n            field.classList.add(\"_error\")\r\n            phoneFieldIsCorrect = false\r\n            return false\r\n        } else{\r\n            phoneFieldIsCorrect = true\r\n            field.classList.remove(\"_error\")\r\n        }\r\n        return true\r\n    }\r\n\r\n    if(\r\n        companyNameFieldIsCorrect &&\r\n        nameFieldIsCorrect &&\r\n        phoneFieldIsCorrect &&\r\n        emailFieldIsCorrect\r\n    ){\r\n\r\n        const formData = {\r\n            companyName: companyNameField.value,\r\n            phone: phoneField.value,\r\n            name: nameField.value,\r\n            email: emailField.value,\r\n        };\r\n\r\n        lockForm(this);\r\n        sendData(form,formData)\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nfunction sendData(form,formData) {\r\n    let url = form.action\r\n    console.log(url)\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n    }).then(response => response.status)\r\n        .then(status => {\r\n            console.log(status)\r\n            if (status === 200) {\r\n                handleSuccess(form)\r\n            } else {\r\n                handleError(form)\r\n            }\r\n        }).catch(() => handleError(form))\r\n        .finally(() => unlockForm(form));\r\n\r\n}\r\n\r\nfunction handleError(form) {\r\n\r\n}\r\n\r\nfunction handleSuccess(form) {\r\n    form.classList.add(\"_success\")\r\n}\r\n\r\nfunction lockForm(form) {\r\n    form.querySelectorAll(\"[type=submit]\").forEach(btn => btn.disabled = true);\r\n}\r\n\r\nfunction unlockForm(form) {\r\n    form.querySelectorAll(\"[type=submit]\").forEach(btn => btn.disabled = false);\r\n}\r\n","let maps = document.querySelectorAll(\"[data-cord1]\")\r\n\r\nymaps.ready(init);\r\n\r\n\r\n\r\n\r\nfunction init(map){\r\n    maps.forEach(map=> {\r\n        createMap(map)\r\n    })\r\n\r\n    function createMap(map){\r\n        let cord = [+map.dataset.cord1, +map.dataset.cord2]\r\n\r\n        let myMap = new ymaps.Map(map, {\r\n            center: cord,\r\n            zoom: 16,\r\n            controls: []\r\n        });\r\n        myMap.behaviors.disable('scrollZoom');\r\n        myMap.controls.add('zoomControl');\r\n\r\n        let placeMark = new ymaps.Placemark(cord, {},\r\n            {\r\n                iconLayout: 'default#image',\r\n                iconImageHref: \"img/mark.svg\",\r\n                iconImageSize: [24, 24],\r\n                iconImageOffset: [-12, -12]\r\n            }\r\n        );\r\n        myMap.geoObjects.add(placeMark);\r\n    }\r\n}\r\n","","","","window.addEventListener('DOMContentLoaded', () => {\r\n    fix100vh();\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n    })\r\n\r\n\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n"]}